{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/shared/services/sample-api.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","sampleApiService","title","lastName","subscriptions","loading","setTimeout","add","getEmployee","subscribe","data","error","undefined","employee","console","log","err","unsubscribe","onClick","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","SampleApiService","http","get","providedIn","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Employee } from 'src/shared/models/employees.model';\nimport { SampleApiService } from 'src/shared/services/sample-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n  title = 'Angular-demo';\n  lastName = 'Demo';\n  employee: Employee;\n  error: string;\n  private subscriptions = new Subscription();\n  loading: boolean = false;\n\n  constructor(private sampleApiService: SampleApiService) {}\n\n  onClick() {\n    this.loading = true;\n    setTimeout(() => {\n      this.subscriptions.add(\n        this.sampleApiService.getEmployee().subscribe(\n          data => {\n            this.error = undefined;\n            this.employee = data;\n            this.loading = false;\n            console.log('res: ', data, this.employee);\n          },\n          err => {\n            this.employee = undefined;\n            this.error = err;\n            this.loading = false;\n            console.log('error', err)\n          })\n      );\n    }, 500)\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n","\n<div class=\"content\" role=\"main\">\n  <div>\n     <P>When we click the button, the component do an HTTP GET to the API at the URL and fetch last name(employee_name})</P>\n      <p>It will display error message when we click button twice less than half-second</p>\n    <button type=\"button\" (click)=\"onClick()\" [disabled]=\"loading\">Get the last name!</button>\n    <div *ngIf=\"employee\">\n      <span>The employee name is {{ employee.data.employee_name}}</span>\n    </div>\n    <div *ngIf=\"error\">\n      <span>Error while making API call: {{ error.error.message}}</span>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Employee, Employees } from '../models/employees.model'\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SampleApiService {\n\n  constructor(private http: HttpClient) { }\n\n/* I used open source url instead of  \"http://someaddress.com/api\" */\n\n  getEmployees(): Observable<Employees> {\n    return this.http.get<Employees>('http://dummy.restapiexample.com/api/v1/employees');\n  }\n\n  getEmployee(): Observable<Employee> {\n    return this.http.get<Employee>('http://dummy.restapiexample.com/api/v1/employee/1');\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}