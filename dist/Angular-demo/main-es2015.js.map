{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/shared/services/sample-api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Employee } from 'src/shared/models/employees.model';\nimport { SampleApiService } from 'src/shared/services/sample-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnDestroy {\n  title = 'Angular-demo';\n  lastName = 'Demo';\n  employee: Employee;\n  error: string;\n  private subscriptions = new Subscription();\n  loading: boolean = false;\n\n  constructor(private sampleApiService: SampleApiService) {}\n\n  onClick() {\n    this.loading = true;\n    setTimeout(() => {\n      this.subscriptions.add(\n        this.sampleApiService.getEmployee().subscribe(\n          data => {\n            this.error = undefined;\n            this.employee = data;\n            this.loading = false;\n            console.log('res: ', data, this.employee);\n          },\n          err => {\n            this.employee = undefined;\n            this.error = err;\n            this.loading = false;\n            console.log('error', err)\n          })\n      );\n    }, 500)\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n","\n<div class=\"content\" role=\"main\">\n  <div>\n     <P>When we click the button, the component do an HTTP GET to the API at the URL and fetch last name(employee_name})</P>\n      <p>It will display error message when we click button twice less than half-second</p>\n    <button type=\"button\" (click)=\"onClick()\" [disabled]=\"loading\">Get the last name!</button>\n    <div *ngIf=\"employee\">\n      <span>The employee name is {{ employee.data.employee_name}}</span>\n    </div>\n    <div *ngIf=\"error\">\n      <span>Error while making API call: {{ error.error.message}}</span>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Employee, Employees } from '../models/employees.model'\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SampleApiService {\n\n  constructor(private http: HttpClient) { }\n\n/* I used open source url instead of  \"http://someaddress.com/api\" */\n\n  getEmployees(): Observable<Employees> {\n    return this.http.get<Employees>('http://dummy.restapiexample.com/api/v1/employees');\n  }\n\n  getEmployee(): Observable<Employee> {\n    return this.http.get<Employee>('http://dummy.restapiexample.com/api/v1/employee/1');\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}